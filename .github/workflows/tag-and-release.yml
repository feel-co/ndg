name: Tag and Release

on:
  workflow_dispatch:
  push:
    branches: ["main"]
    paths:
      - "Cargo.toml"
      - "Cargo.lock"

permissions:
  contents: write

jobs:
  tag:
    runs-on: ubuntu-latest
    outputs:
      ndg_version: ${{ steps.read_version.outputs.ndg_version }}
    steps:
      - uses: cachix/install-nix-action@master
        with:
          github_access_token: ${{ secrets.GITHUB_TOKEN }}
      - uses: actions/checkout@v5
        name: Checkout
      - name: Read version
        id: read_version
        run: |
          echo "ndg_version=v$(nix run nixpkgs#fq -- -r '.workspace.package.version' Cargo.toml)" >> "$GITHUB_OUTPUT"
      - name: Tag
        run: |
          set -ex
          echo "Tags before:"
          git tag -l
          echo "Checking if tag ${{ steps.read_version.outputs.ndg_version }} exists on remote..."
          if git ls-remote --tags origin | grep -q "refs/tags/${{ steps.read_version.outputs.ndg_version }}$"; then
            echo "Tag ${{ steps.read_version.outputs.ndg_version }} already exists on remote. Skipping tag creation and push."
            exit 0
          fi
          git tag ${{ steps.read_version.outputs.ndg_version }}
          echo "Tags after:"
          git tag -l
          git push --tags
          echo "Verifying tag on remote:"
          git fetch --tags
          if git ls-remote --tags origin | grep -q "refs/tags/${{ steps.read_version.outputs.ndg_version }}$"; then
            echo "Tag ${{ steps.read_version.outputs.ndg_version }} successfully pushed to remote."
          else
            echo "::error:: Tag ${{ steps.read_version.outputs.ndg_version }} not found on remote after push." >&2
            exit 1
          fi

  create-release:
    needs: tag
    runs-on: ubuntu-latest
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
      release_id: ${{ steps.create_release.outputs.id }}
    steps:
      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ needs.tag.outputs.ndg_version }}
          draft: false
          prerelease: false
          generate_release_notes: true

  build-release:
    needs: create-release
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            name: ndg-linux-amd64
            cross: false
          - os: ubuntu-latest
            target: aarch64-unknown-linux-gnu
            name: ndg-linux-arm64
            cross: true
          - os: macos-latest
            target: x86_64-apple-darwin
            name: ndg-macos-amd64
            cross: false

    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v5

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.target }}

      - name: Cache dependencies
        uses: Swatinem/rust-cache@v2

      - name: Setup cross-compilation (Linux ARM64)
        if: matrix.cross && matrix.os == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y gcc-aarch64-linux-gnu

      - name: Install cross
        if: matrix.cross
        uses: taiki-e/install-action@v2
        with:
          tool: cross

      - name: Build binary
        if: ${{ !matrix.cross }}
        run: cargo build --release --target ${{ matrix.target }}

      - name: Build binary
        if: ${{ matrix.cross }}
        run: cross build --release --target ${{ matrix.target }}

      - name: Prepare binary
        run: |
          cp target/${{ matrix.target }}/release/ndg ${{ matrix.name }}

      - name: Upload Release Asset
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ needs.create-release.outputs.tag_name || needs.tag.outputs.ndg_version }}
          files: ${{ matrix.name }}

  generate-checksums:
    needs: [create-release, build-release]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5

      - name: Download Assets
        uses: robinraju/release-downloader@v1
        with:
          tag: ${{ needs.tag.outputs.ndg_version }}
          fileName: "ndg-*"
          out-file-path: "."

      - name: Generate checksums
        run: |
          sha256sum ndg-* > SHA256SUMS

      - name: Upload Checksums
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ needs.tag.outputs.ndg_version }}
          files: SHA256SUMS

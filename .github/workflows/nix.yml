name: Nix Build

on:
  workflow_call:
  pull_request:
  push:
    branches: ["main"]

jobs:
  changes:
    name: "Detect Changed Files"
    runs-on: ubuntu-latest
    permissions:
      pull-requests: read
    steps:
      - name: "Checkout Repository"
        uses: actions/checkout@v4

      - name: "Get changed files"
        id: changed-files
        uses: dorny/paths-filter@v3
        with:
          filters: |
            files:
              - 'Cargo.toml'
              - 'Cargo.lock'
              - 'ndg/*'
              - 'ndg-commonmark/*'
              - 'flake/*'
              - 'flake.nix'
              - 'flake.lock'
              - 'default.nix'
              - 'shell.nix'
  nix:
    name: "Build with Nix"
    runs-on: ubuntu-latest
    needs: changes
    if: ${{ needs.changes.outputs.files == 'true' }}
    strategy:
      matrix:
        system:
          - x86_64-linux
          - aarch64-linux

    steps:
      - name: "Set up QEMU support"
        uses: docker/setup-qemu-action@v3
        with:
          platforms: arm64

      - name: Install Lix
        uses: DeterminateSystems/nix-installer-action@main
        with:
          diagnostic-endpoint: '' # no personalized self-merges tyvm.
          source-url: 'https://install.lix.systems/lix/lix-installer-x86_64-linux'
          logger: pretty
          extra-conf: |
            experimental-features = nix-command flakes fetch-tree
            allow-import-from-derivation = false
            extra-platforms = aarch64-linux

      - name: "Checkout Repository"
        uses: actions/checkout@v4

      - name: "Build packages"
        run: nix build -L .#checks.${{ matrix.system }}.default -v

      # For debugging purposes, the default check is standalone so
      # it can be opened or served with zero overhead.
      - name: Upload doc artifacts
        uses: actions/upload-artifact@v4
        with:
          name: "ndg-checks-${{ matrix.system }}-default"
          path: result/share/doc/*
          overwrite: true

rd_("AjContains the success valueBoGenerated or explicit anchor ID for the header.AnCommand line interface for ndgAhContains the error valueB`GitHub Flavored Markdown supportCiEnhanced Markdown processing with support for GFM and \xe2\x80\xa6BkEnable or disable GitHub Flavored Markdown.CaEnable GitHub Flavored Markdown (GFM) extensions.ClNDG\xe2\x80\x99s internal API exposed in order to be used in unit \xe2\x80\xa6DcCreate a new <code>MarkdownProcessor</code> with the given options.BjCreate a new builder with default options.CjCreate a new Syntastica highlighter with all available \xe2\x80\xa6CnCreate a new syntax manager with the given highlighter and \xe2\x80\xa6BgProcess documentation and generate HTMLBgInitialize a new NDG configuration fileBnCore implementation of the Markdown processor.AoReturns the argument unchanged.000000000000000000AeRendered HTML output.BaCalls <code>U::from(self)</code>.000000000000000000C`Number of threads to use for parallel processing0BgLoad config from file and CLI argumentsBoOption name (e.g., \xe2\x80\x9cservices.nginx.enable\xe2\x80\x9d)BhGet the name of this highlighter backendAjPath to the included file.CeHeader text (inline content, no markdown formatting).CjMarkdown processing with only Github Flavored Markdown \xe2\x80\xa6BmBuild the final <code>MarkdownOptions</code>.BoError types for syntax highlighting operations.BfForce overwrite if file already existsAhOverwrite existing filesAcHeader level (1-6).CgTitle of the documentation. Will be used in various \xe2\x80\xa6AeTitle for the manpageAkTitle for the documentationCcTitle of the document, if found (usually first H1).BlType definitions for the Markdown processor.BnCore types and traits for syntax highlighting.AmConfiguration options for ndgBkRepresents a header in a Markdown document.AeGet the configurationBaFooter text for the documentationC`Footer text to include at the end of the manpageBoFormat of the configuration file (toml or json)CfHeader text to include at the beginning of the manpageBhPath to create the configuration file atAkRender a documentation pageCfRender Markdown to HTML, extracting headers and title.CjPath to custom Javascript file to include. This can be \xe2\x80\xa6CbProvides a trait-based architecture for syntax \xe2\x80\xa6AmGenerate manpage from optionsB`Nixpkgs documentation extensionsDjMarkdown processing with only Nixpkgs-flavored <code>CommonMark</code> \xe2\x80\xa6AkOption default value (JSON)AkOption example value (JSON)CjExtracted headers (for <code>ToC</code>, navigation, etc).BeEnable or disable Nixpkgs extensions.BnEnable Nixpkgs/NixOS documentation extensions.AiAccess processor options.BoMain processing functions for Markdown content.AnSection number for the manpageCiSlugify a string for use as an anchor ID. Converts to \xe2\x80\xa6AlEnable verbose debug loggingBgGenerate shell completions and manpagesAoWhether this option is internalClGitHub revision for linking to source files (defaults to \xe2\x80\xa6BkGitHub revision for linking to source filesAlPath to custom template fileCdRepresents a <code>NixOS</code> configuration optionAbAdd a custom themeCmCreate a new configuration from a file Only TOML and JSON \xe2\x80\xa6AmCheck if a theme is availableCeHighlight code with the specified language and theme.BoPath to the directory containing markdown filesBiInput directory containing markdown filesCmAdditional meta tags to inject into the HTML head (e.g., {\xe2\x80\xa6Dg<code>OpenGraph</code> tags to inject into the HTML head (e.g., {\xe2\x80\x9c\xe2\x80\xa6CeMarkdown processing module with modular organization.B`Whether this option is read-onlyCmOption type (e.g., \xe2\x80\x9cboolean\xe2\x80\x9d, \xe2\x80\x9cstring\xe2\x80\x9d, \xe2\x80\x9csigned \xe2\x80\xa6BfDirectory containing additional assetsC`Feature-specific Markdown processing extensions.BdEscapes a string for use in manpagesBcOutput directory for template filesBcDirectory to output generated filesBlOutput directory for generated documentation0AhUpdate the configurationCmPath to custom stylesheet. This can be specified multiple \xe2\x80\xa6AkManpage URL mapping supportCaErrors that can occur during syntax highlighting.BiPath to configuration file (TOML or JSON)AoCopy assets to output directoryBmPath to the file where the option is declaredAbOption descriptionBaText to be inserted in the footerBgCheck if a specific feature is enabled.AnGet the underlying highlighterBoEscape HTML special characters in text content.BeOutput file for the generated manpageDdRepresents a file that was included via <code>{=include=}</code> \xe2\x80\xa6BeConfiguration for syntax highlightingBoResult type for syntax highlighting operations.AlOption default value as textCeEnsure that index.html exists in the output directoryAlOption example value as textCnGenerates both shell completions and a manpage for the ndg \xe2\x80\xa6CgGet the correct configuration template based on the \xe2\x80\xa6AeOnly generate manpageBfPath to manpage URL mappings JSON fileChGet the manpage URLs mapping for use with standalone \xe2\x80\xa6CbSafely process markup content with error recovery.B`Paths to custom JavaScript filesCkPath to directory containing template files. Use \xe2\x80\x98ndg \xe2\x80\xa6ChPath to template directory containing all template filesBgHigh-level syntax highlighting manager.BcError type for template operations.DgOptional custom output path from <code>html:into-file</code> directive.BkDefault theme to use when none is specifiedBlGenerates shell completions for the ndg CLI.CkProcess a batch of markdown files with consistent error \xe2\x80\xa6AbRender search pageAlPath to custom template fileCiSet the base directory for resolving relative file paths.BnCreate options with runtime feature overrides.CjTrait for AST transformations (e.g., prompt highlighting).AnResult of Markdown processing.AnSearch document data structureCiFiles to exclude from sidebar navigation (included files)CeWhether to enable syntax highlighting for code blocks0BfEnable or disable syntax highlighting.BkEnable syntax highlighting for code blocks.CiHighlight code with automatic language resolution and \xe2\x80\xa6DaFiles that were included via <code>{=include=}</code> directives.CjMerge CLI arguments into this config, prioritizing CLI \xe2\x80\xa6CmPath to a JSON file containing module options in the same \xe2\x80\xa6BmPath to a JSON file containing module optionsBdPath to options.json file (optional)nNDG-CommonmarkBmRender <code>NixOS</code> module options pageB`Strip markdown to get plain textC`Strip markdown formatting and return plain text.CaValidate all paths specified in the configurationCiExport default templates to a directory for customizationBoOptions for configuring the Markdown processor.CmPreset configurations for common use cases. In some cases \xe2\x80\xa6BdOption declaration URL for hyperlinkCdExtract headers and title from the markdown content.BhWhether to generate search functionalityBbWhether to generate a search indexBbSet the syntax highlighting theme.C`Optional: Custom syntax highlighting theme name.B`Process options from a JSON fileCeFeatures that can be queried on a processor instance.AnGet a list of available themesBhCapitalize the first letter of a string.AoOnly generate shell completionsCiCreate a processor with sensible defaults for library \xe2\x80\xa6CjExport embedded templates to a directory for customizationBkSearch for config files in common locationsBhWhether to generate anchors for headingsBdGenerates a manpage for the ndg CLI.BdGenerate a manpage from options JSONCeMap of characters that need to be escaped in manpagesCjLanguage aliases for mapping common names to supported \xe2\x80\xa6BeResolve a language name using aliasesAkPaths to custom stylesheetsCjCreate a new syntax manager with the default configurationAhMain Markdown processor.CnAST transformer for processing command and REPL prompts in \xe2\x80\xa6BgTrait for syntax highlighting backends.ClIndicates that the requested configuration format is not \xe2\x80\xa6CfWhether to fall back to plain text for unsupported \xe2\x80\xa6CcGet template file path for a specific template nameBjGet template directory path or file parentBkLoad manpage URL mappings from a JSON file.BfPath to manpage URL mappings JSON fileAjSet the manpage URLs path.CiOptional: Path to manpage URL mappings (for {manpage} \xe2\x80\xa6BiDepth of parent categories in options TOC0AeSet the default themeB`Check if a language is supportedCgEnable all available features based on compile-time \xe2\x80\xa6BcSyntax highlighting for code blocksAbCreate search pageCmEscape a leading dot to prevent it from being interpreted \xe2\x80\xa6BkExtract the page title from a markdown fileCmFormat the role markup as HTML based on the role type and \xe2\x80\xa6CjReturn true if the string looks like a markdown header \xe2\x80\xa6BlExtract all inline text from a heading node.BhProcess role markup in markdown content.BaGet a list of supported languagesCjApply GitHub Flavored Markdown (GFM) extensions to the \xe2\x80\xa6CjCreate options from external configuration with fluent \xe2\x80\xa6CkGenerate proper asset paths for templates based on file \xe2\x80\xa6CjHighlight all code blocks in HTML using the configured \xe2\x80\xa6BkCreate a regex that never matches anything.AdProcess options fileBnDefault configuration template in JSON format.ChDefault configuration template in TOML. We\xe2\x80\x99ve also \xe2\x80\xa6BdSyntastica-based syntax highlighter.CiClean anchor patterns from text (removes {#anchor-id} \xe2\x80\xa6AlCreate a fallback index pageBiGenerate search index from markdown filesCeProcess file includes in Nixpkgs/NixOS documentation.CkApply a regex transformation to HTML elements using the \xe2\x80\xa6CiProcess markdown content from a file with error recovery.BmProcess markdown content with error recovery.DeBuilder for constructing <code>MarkdownOptions</code> with method \xe2\x80\xa6CbCollect all included files from markdown documentsCcCollect all markdown files from the input directoryChCreate the default syntax manager based on available \xe2\x80\xa6CjExtract the first heading from markdown content as the \xe2\x80\xa6AoDetect language from a filenameBkProcess block elements in markdown content.BkProcess inline anchors in markdown content.AfProcess markdown filesChGenerate a default configuration file with commented \xe2\x80\xa6AkHandle the generate commandAnHighlight code from a filenameBeDetect language from a file extensionCkProcess markdown content from a string with error recovery.BdGenerate a manpage from options JSONCiCreate a Syntastica-based syntax manager with default \xe2\x80\xa6CgProcess option references Rewrites NixOS/Nix option \xe2\x80\xa6BkProcess manpage references in HTML content.CmExtract the first H1 heading from markdown content as the \xe2\x80\xa6CjCalculate the relative path prefix needed to reach the \xe2\x80\xa6BkCreate a markdown processor from ndg configCmProcess content through the markdown pipeline and extract \xe2\x80\xa6CiProcess markdown content from a file with custom base \xe2\x80\xa6")